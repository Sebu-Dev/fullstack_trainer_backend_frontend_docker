version: "3.8"

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./acme.json:/acme.json
    networks:
      - app-net

  db:
    image: postgres:16.2
    container_name: PostgreSQL
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgAdmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - app-net
    depends_on:
      - db
    volumes:
      - pg-Admin-data:/var/lib/pgadmin

  backend:
    container_name: Fullstack_trainer_backend
    build:
      context: ../fullstack-trainer-backend/
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    expose:
      - "8080"
    networks:
      - app-net
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`sebu-dev.de`) && Path(`/quiz/questions`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.service=backend-service"
      - "traefik.http.services.backend-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.backend.middlewares=cors-headers,strip-quiz"

  frontend:
    container_name: Fullstack_trainer_frontend
    build:
      context: ../fullstack-trainer-frontend/
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:80"
    networks:
      - app-net
    depends_on:
      - backend

networks:
  app-net:
    driver: bridge

volumes:
  db-data:
  pg-Admin-data: