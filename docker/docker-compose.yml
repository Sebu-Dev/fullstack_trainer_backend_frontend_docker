version: "3.8"

services:
  # Datenbank
  db:
    image: postgres:16.2
    container_name: PostgreSQL
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB} 
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app-net

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgAdmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - app-net
    depends_on:
      - db
    volumes:
      - pg-Admin-data:/var/lib/pgadmin

  # Backend
  backend:
    container_name: Fullstack_trainer_backend
    build:
      context: ../fullstack-trainer-backend/
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_PROFILES_ACTIVE: development # Aktiviert das Development-Profil
      # Alternative: FEATURE_UPLOAD_ENABLED=true (wenn Sie keine Profile nutzen)
    ports:
      - "8080:8080"
    networks:
      - app-net
    depends_on:
      - db

  # Frontend
  frontend:
    container_name: Fullstack_trainer_frontend
    build:
      context: ../fullstack-trainer-frontend/
      dockerfile: Dockerfile
    environment:
      REACT_APP_FEATURE_UPLOAD_ENABLED: "true" 
    ports:
      - "3000:80"
    networks:
      - app-net
    depends_on:
      - backend

networks:
  app-net:
    driver: bridge

volumes:
  db-data:
  pg-Admin-data: